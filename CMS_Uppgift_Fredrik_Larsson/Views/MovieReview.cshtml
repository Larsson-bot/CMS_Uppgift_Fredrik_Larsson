@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ContentModels.MovieReview>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{
	Layout = "Master.cshtml";
}

@{

    var image = Model.Value<IPublishedContent>("reviewImage");



    var page = Umbraco.AssignedContentItem;
    var selection = Umbraco.Content(Guid.Parse("bc9d62a0-44b4-41d9-b354-5bcc71591027"))
.ChildrenOfType("movieReview")
.Where(x => x.IsVisible() && x.Name != page.Name)
.OrderByDescending(x => x.CreateDate);


}

<div class="container">
    <div class="mt-3">
        <h1 class="mb-3">@Model.Value("reviewHeadline")</h1>
        <img class="review-Image" src="@image.Url()" />
 @{
    


    
    var value2 = Int32.Parse(@Model.Value("reviewRating").ToString());


    @switch(value2){
   
    case 1:
    <div class="d-flex">
        <i class="fas fa-star"></i>
        <i class="far fa-star"></i>
        <i class="far fa-star"></i>
        <i class="far fa-star"></i>
        <i class="far fa-star"></i>
    </div>

    break;
    
     case 2:
    <div class="d-flex">
        <i class="fas fa-star"></i>
        <i class="fas fa-star"></i>
        <i class="far fa-star"></i>
        <i class="far fa-star"></i>
        <i class="far fa-star"></i>
    </div>

    break;
    
     case 3:
    <div class="d-flex">
        <i class="fas fa-star"></i>
        <i class="fas fa-star"></i>
        <i class="fas fa-star"></i>
        <i class="far fa-star"></i>
        <i class="far fa-star"></i>
    </div>

    break;
    
     case 4:
    <div class="d-flex">
        <i class="fas fa-star"></i>
        <i class="fas fa-star"></i>
        <i class="fas fa-star"></i>
        <i class="fas fa-star"></i>
        <i class="far fa-star"></i>
    </div>

    break;
    
     case 5:
    <div class="d-flex">
        <i class="fas fa-star"></i>
        <i class="fas fa-star"></i>
        <i class="fas fa-star"></i>
        <i class="fas fa-star"></i>
        <i class="fas fa-star"></i>
    </div>

    break;
    
    
    }
  


}
        <p class="review-Text">@Model.Value("reviewBreadText")

        </p>

        <div>

          <h3>You may also be interested in</h3>
          <div class="more-reviews">
            <ul>
            	@foreach (var item in selection)
            	{
        	    var reviewImage = item.Value<IPublishedContent>("reviewTeaserImage");
            		<li>
            			<a href="@item.Url()">
            			<div>
            			    @item.Value("reviewTeaserTitle")
            			    <img src="@reviewImage.Url()" >
            			</div>
            		    </a>
            		</li>
            	}
            </ul>
          </div>
          
        </div>
    </div>
  </div>



